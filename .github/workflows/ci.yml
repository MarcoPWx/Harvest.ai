name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

defaults:
  run:
    working-directory: frontend

jobs:
  commitlint:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Commitlint (PR commits)
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: commitlint.config.cjs

  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint
        run: npm run lint

      - name: Run unit tests
        run: npm test -- --ci --coverage

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: frontend/coverage

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests (mock mode)
        env:
          CI: 'true'
        run: npx playwright test

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report

      - name: Write CI status JSON for Storybook
        run: |
          mkdir -p docs/status
          cat > docs/status/ci-status.json <<'JSON'
          {
            "summary": {
              "unit": "passed",
              "e2e": "passed",
              "storybookInteractions": "passed"
            },
            "links": {
              "coverage": "./coverage/index.html",
              "playwrightReport": "./playwright-report/index.html"
            },
            "generatedAt": "${{ github.run_id }}"
          }
          JSON

      - name: Build Storybook
        run: npm run build-storybook

      - name: Run Storybook Test Runner
        run: npm run storybook:test

      - name: Upload Storybook static site
        uses: actions/upload-artifact@v4
        with:
          name: storybook-static
          path: frontend/storybook-static

      - name: Link check docs (optional)
        if: ${{ !cancelled() }}
        uses: lycheeverse/lychee-action@v1
        with:
          args: --verbose --no-progress docs/**/*.md frontend/docs/**/*.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Chromatic (optional)
        if: ${{ secrets.CHROMATIC_PROJECT_TOKEN != '' }}
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}
          workingDir: frontend

      - name: Post-deploy smoke (optional)
        if: ${{ env.SMOKE_BASE_URL != '' }}
        env:
          SMOKE_BASE_URL: ${{ env.SMOKE_BASE_URL }}
          SMOKE_TRY_GENERATE: ${{ env.SMOKE_TRY_GENERATE }}
        run: node scripts/smoke.mjs

